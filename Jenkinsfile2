pipeline {
agent any

tools {
  maven 'maven3.8.6'
  }
  options {
  timestamps ()
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
  }
  triggers {
  pollSCM ('* * * * *')
  //cron ('* * * * *')
  }
stages {
  stage ('Checkout Code State') {
  steps {
  sendSlackNotifications ("STARTED")
  git branch: 'development', credentialsId: 'a9b29dba-fc87-41a5-b6e9-d62b1f7e9ac5', url: 'https://github.com/GangadharKeralli/maven-web-application.git'
  }
  }
  stage ('Build') {
  steps {
  sh "mvn clean package"
  }
  }
  stage ('Execute SQ Report') {
  steps {
  sh "mvn clean sonar:sonar"
  }
  }
  stage ('Upload Artifacts into Nexus') {
  steps {
  sh "mvn clean deploy"
  }
  }
  stage (' Deploy App into Tomcat') {
  steps {
  sshagent(['a79d090a-1d56-4dc4-ae62-61d6e8dd6ed3']) {
  sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.45.59:/opt/apache-tomcat-9.0.68/webapps/"
  }
  }
  }
  
 }//stages
 
 post {
  always {
    sendSlackNotifications(currentBuild.result)
  }
  success {
    sendSlackNotifications(currentBuild.result)
  }
  failure {
    sendSlackNotifications(currentBuild.result)
  }
  }

}//pipeline

//Function for SlackNotifications

  def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: '#sbibank')
  }
